<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.legou.dao.NoticeMapper">
    <resultMap id="BaseResultMap" type="com.legou.entry.Notice">
        <id column="n_id" jdbcType="CHAR" property="nId"/>
        <result column="n_content" jdbcType="VARCHAR" property="nContent"/>
        <result column="n_createTime" jdbcType="VARCHAR" property="nCreatetime"/>
        <result column="admin_id" jdbcType="CHAR" property="adminId"/>
    </resultMap>
    <!--  同时带上发布者的姓名-->
    <resultMap id="WithAdminNameResultMap" type="com.legou.entry.Notice">
        <id column="n_id" jdbcType="CHAR" property="nId"/>
        <result column="n_content" jdbcType="VARCHAR" property="nContent"/>
        <result column="n_createTime" jdbcType="VARCHAR" property="nCreatetime"/>
        <result column="admin_id" jdbcType="CHAR" property="adminId"/>
        <association property="administrator" javaType="com.legou.entry.Administrator">
            <id column="admin_id" jdbcType="CHAR" property="adminId"/>
            <result column="admin_name" jdbcType="VARCHAR" property="adminName"/>
        </association>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="WithAdminName_Column_List">
    n.n_id, n.n_content, n.n_createTime, n.admin_id,a.admin_name
  </sql>
    <sql id="Base_Column_List">
    n_id, n_content, n_createTime, admin_id
  </sql>
    <!--  条件查询SQL语句-->
    <sql id="Base_Where_Clause">
        <where>
            <if test="nId != null">
                n_id = #{nId}
            </if>
            <if test="nContent != null">
                and n_content like "%"#{nContent}"%"
            </if>
        </where>
    </sql>
    <select id="selectByNotice" parameterType="com.legou.entry.Notice" resultMap="WithAdminNameResultMap">
        select
        <include refid="WithAdminName_Column_List"/>
        from notice n
        left join administrators a on n.admin_id = a.admin_id
        <include refid="Base_Where_Clause"/>
        order by n.n_createTime DESC
    </select>
    <!--  同时带上发布者的姓名-->
    <select id="selectNoticeWithAdminName" parameterType="com.legou.entry.NoticeExample"
            resultMap="WithAdminNameResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="WithAdminName_Column_List"/>
        from notice n
        left join administrators a on n.admin_id = a.admin_id
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        order by n.n_createTime DESC
    </select>
    <select id="selectByExample" parameterType="com.legou.entry.NoticeExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from notice
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from notice
        where n_id = #{nId,jdbcType=CHAR}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from notice
    where n_id = #{nId,jdbcType=CHAR}
  </delete>
    <delete id="deleteByExample" parameterType="com.legou.entry.NoticeExample">
        delete from notice
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.legou.entry.Notice">
    insert into notice (n_id, n_content, n_createTime, 
      admin_id)
    values (#{nId,jdbcType=CHAR}, #{nContent,jdbcType=VARCHAR}, #{nCreatetime,jdbcType=VARCHAR}, 
      #{adminId,jdbcType=CHAR})
  </insert>
    <insert id="insertSelective" parameterType="com.legou.entry.Notice">
        insert into notice
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="nId != null">
                n_id,
            </if>
            <if test="nContent != null">
                n_content,
            </if>
            <if test="nCreatetime != null">
                n_createTime,
            </if>
            <if test="adminId != null">
                admin_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="nId != null">
                #{nId,jdbcType=CHAR},
            </if>
            <if test="nContent != null">
                #{nContent,jdbcType=VARCHAR},
            </if>
            <if test="nCreatetime != null">
                #{nCreatetime,jdbcType=VARCHAR},
            </if>
            <if test="adminId != null">
                #{adminId,jdbcType=CHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.legou.entry.NoticeExample" resultType="java.lang.Long">
        select count(*) from notice
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update notice
        <set>
            <if test="record.nId != null">
                n_id = #{record.nId,jdbcType=CHAR},
            </if>
            <if test="record.nContent != null">
                n_content = #{record.nContent,jdbcType=VARCHAR},
            </if>
            <if test="record.nCreatetime != null">
                n_createTime = #{record.nCreatetime,jdbcType=VARCHAR},
            </if>
            <if test="record.adminId != null">
                admin_id = #{record.adminId,jdbcType=CHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update notice
        set n_id = #{record.nId,jdbcType=CHAR},
        n_content = #{record.nContent,jdbcType=VARCHAR},
        n_createTime = #{record.nCreatetime,jdbcType=VARCHAR},
        admin_id = #{record.adminId,jdbcType=CHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.legou.entry.Notice">
        update notice
        <set>
            <if test="nContent != null">
                n_content = #{nContent,jdbcType=VARCHAR},
            </if>
            <if test="nCreatetime != null">
                n_createTime = #{nCreatetime,jdbcType=VARCHAR},
            </if>
            <if test="adminId != null">
                admin_id = #{adminId,jdbcType=CHAR},
            </if>
        </set>
        where n_id = #{nId,jdbcType=CHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.legou.entry.Notice">
    update notice
    set n_content = #{nContent,jdbcType=VARCHAR},
      n_createTime = #{nCreatetime,jdbcType=VARCHAR},
      admin_id = #{adminId,jdbcType=CHAR}
    where n_id = #{nId,jdbcType=CHAR}
  </update>
</mapper>