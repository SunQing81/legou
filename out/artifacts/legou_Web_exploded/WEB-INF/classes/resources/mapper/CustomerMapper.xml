<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.legou.dao.CustomerMapper">
    <resultMap id="BaseResultMap" type="com.legou.entry.Customer">
        <id column="c_id" jdbcType="CHAR" property="cId"/>
        <result column="c_name" jdbcType="VARCHAR" property="cName"/>
        <result column="c_password" jdbcType="VARCHAR" property="cPassword"/>
        <result column="c_gender" jdbcType="INTEGER" property="cGender"/>
        <result column="c_birthday" jdbcType="DATE" property="cBirthday"/>
        <result column="c_email" jdbcType="VARCHAR" property="cEmail"/>
        <result column="c_phone" jdbcType="CHAR" property="cPhone"/>
        <result column="c_image" jdbcType="VARCHAR" property="cImage"/>
        <result column="jifen" jdbcType="INTEGER" property="jifen"/>
    </resultMap>
    <!--  条件查询SQL语句-->
    <sql id="Base_Where_Clause">
        <where>
            <if test="cId != null">
                c_id = #{cId}
            </if>
            <if test="cName != null">
                and c_name like "%"#{cName}"%"
            </if>
            <if test="cGender != null">
                and c_gender = #{cGender}
            </if>
            <if test="cPhone != null">
                and c_phone like "%"#{cPhone}"%"
            </if>
        </where>
    </sql>

    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    c_id, c_name, c_password, c_gender, c_birthday, c_email, c_phone, c_image, jifen
  </sql>
    <!--  条件查询用户信息 DAO-->
    <select id="selectByCustomer" parameterType="com.legou.entry.Customer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from customers
        <include refid="Base_Where_Clause"/>
    </select>
    <select id="selectByExample" parameterType="com.legou.entry.CustomerExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from customers
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from customers
        where c_id = #{cId,jdbcType=CHAR}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from customers
    where c_id = #{cId,jdbcType=CHAR}
  </delete>
    <delete id="deleteByExample" parameterType="com.legou.entry.CustomerExample">
        delete from customers
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.legou.entry.Customer">
    insert into customers (c_id, c_name, c_password, 
      c_gender, c_birthday, c_email, 
      c_phone, c_image, jifen)
    values (#{cId,jdbcType=CHAR}, #{cName,jdbcType=VARCHAR}, #{cPassword,jdbcType=VARCHAR}, 
      #{cGender,jdbcType=INTEGER}, #{cBirthday,jdbcType=DATE}, #{cEmail,jdbcType=VARCHAR}, 
      #{cPhone,jdbcType=CHAR}, #{cImage,jdbcType=VARCHAR}, #{jifen,jdbcType=INTEGER})
  </insert>
    <insert id="insertSelective" parameterType="com.legou.entry.Customer">
        insert into customers
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="cId != null">
                c_id,
            </if>
            <if test="cName != null">
                c_name,
            </if>
            <if test="cPassword != null">
                c_password,
            </if>
            <if test="cGender != null">
                c_gender,
            </if>
            <if test="cBirthday != null">
                c_birthday,
            </if>
            <if test="cEmail != null">
                c_email,
            </if>
            <if test="cPhone != null">
                c_phone,
            </if>
            <if test="cImage != null">
                c_image,
            </if>
            <if test="jifen != null">
                jifen,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="cId != null">
                #{cId,jdbcType=CHAR},
            </if>
            <if test="cName != null">
                #{cName,jdbcType=VARCHAR},
            </if>
            <if test="cPassword != null">
                #{cPassword,jdbcType=VARCHAR},
            </if>
            <if test="cGender != null">
                #{cGender,jdbcType=INTEGER},
            </if>
            <if test="cBirthday != null">
                #{cBirthday,jdbcType=DATE},
            </if>
            <if test="cEmail != null">
                #{cEmail,jdbcType=VARCHAR},
            </if>
            <if test="cPhone != null">
                #{cPhone,jdbcType=CHAR},
            </if>
            <if test="cImage != null">
                #{cImage,jdbcType=VARCHAR},
            </if>
            <if test="jifen != null">
                #{jifen,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.legou.entry.CustomerExample" resultType="java.lang.Long">
        select count(*) from customers
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update customers
        <set>
            <if test="record.cId != null">
                c_id = #{record.cId,jdbcType=CHAR},
            </if>
            <if test="record.cName != null">
                c_name = #{record.cName,jdbcType=VARCHAR},
            </if>
            <if test="record.cPassword != null">
                c_password = #{record.cPassword,jdbcType=VARCHAR},
            </if>
            <if test="record.cGender != null">
                c_gender = #{record.cGender,jdbcType=INTEGER},
            </if>
            <if test="record.cBirthday != null">
                c_birthday = #{record.cBirthday,jdbcType=DATE},
            </if>
            <if test="record.cEmail != null">
                c_email = #{record.cEmail,jdbcType=VARCHAR},
            </if>
            <if test="record.cPhone != null">
                c_phone = #{record.cPhone,jdbcType=CHAR},
            </if>
            <if test="record.cImage != null">
                c_image = #{record.cImage,jdbcType=VARCHAR},
            </if>
            <if test="record.jifen != null">
                jifen = #{record.jifen,jdbcType=INTEGER},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update customers
        set c_id = #{record.cId,jdbcType=CHAR},
        c_name = #{record.cName,jdbcType=VARCHAR},
        c_password = #{record.cPassword,jdbcType=VARCHAR},
        c_gender = #{record.cGender,jdbcType=INTEGER},
        c_birthday = #{record.cBirthday,jdbcType=DATE},
        c_email = #{record.cEmail,jdbcType=VARCHAR},
        c_phone = #{record.cPhone,jdbcType=CHAR},
        c_image = #{record.cImage,jdbcType=VARCHAR},
        jifen = #{record.jifen,jdbcType=INTEGER}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.legou.entry.Customer">
        update customers
        <set>
            <if test="cName != null">
                c_name = #{cName,jdbcType=VARCHAR},
            </if>
            <if test="cPassword != null">
                c_password = #{cPassword,jdbcType=VARCHAR},
            </if>
            <if test="cGender != null">
                c_gender = #{cGender,jdbcType=INTEGER},
            </if>
            <if test="cBirthday != null">
                c_birthday = #{cBirthday,jdbcType=DATE},
            </if>
            <if test="cEmail != null">
                c_email = #{cEmail,jdbcType=VARCHAR},
            </if>
            <if test="cPhone != null">
                c_phone = #{cPhone,jdbcType=CHAR},
            </if>
            <if test="cImage != null">
                c_image = #{cImage,jdbcType=VARCHAR},
            </if>
            <if test="jifen != null">
                jifen = #{jifen,jdbcType=INTEGER},
            </if>
        </set>
        where c_id = #{cId,jdbcType=CHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.legou.entry.Customer">
    update customers
    set c_name = #{cName,jdbcType=VARCHAR},
      c_password = #{cPassword,jdbcType=VARCHAR},
      c_gender = #{cGender,jdbcType=INTEGER},
      c_birthday = #{cBirthday,jdbcType=DATE},
      c_email = #{cEmail,jdbcType=VARCHAR},
      c_phone = #{cPhone,jdbcType=CHAR},
      c_image = #{cImage,jdbcType=VARCHAR},
      jifen = #{jifen,jdbcType=INTEGER}
    where c_id = #{cId,jdbcType=CHAR}
  </update>
</mapper>