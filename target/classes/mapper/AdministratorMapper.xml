<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.legou.dao.AdministratorMapper">
    <resultMap id="BaseResultMap" type="com.legou.entry.Administrator">
        <id column="admin_id" jdbcType="CHAR" property="adminId"/>
        <result column="admin_name" jdbcType="VARCHAR" property="adminName"/>
        <result column="admin_password" jdbcType="VARCHAR" property="adminPassword"/>
        <result column="admin_gender" jdbcType="INTEGER" property="adminGender"/>
        <result column="admin_email" jdbcType="VARCHAR" property="adminEmail"/>
        <result column="admin_phone" jdbcType="CHAR" property="adminPhone"/>
        <result column="admin_createtime" jdbcType="VARCHAR" property="adminCreatetime"/>
        <result column="admin_image" jdbcType="VARCHAR" property="adminImage"/>
        <result column="admin_type_id" jdbcType="INTEGER" property="adminTypeId"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <!--  条件查询SQL语句-->
    <sql id="Base_Where_Clause">
        <where>
            <if test="adminId != null">
                admin_id = #{adminId}
            </if>
            <if test="adminName != null">
                and admin_name like "%"#{adminName}"%"
            </if>
            <if test="adminGender != null">
                and admin_gender = #{adminGender}
            </if>
            <if test="adminPhone != null">
                and admin_phone like "%"#{adminPhone}"%"
            </if>
            <if test="adminTypeId != null">
                and admin_type_id = #{adminTypeId}
            </if>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    admin_id, admin_name, admin_password, admin_gender, admin_email, admin_phone, admin_createtime, 
    admin_image, admin_type_id
  </sql>
    <!--  条件查询员工信息 DAO-->
    <select id="selectByEmployee" parameterType="com.legou.entry.Administrator" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from administrators
        <include refid="Base_Where_Clause"/>
    </select>
    <select id="selectByExample" parameterType="com.legou.entry.AdministratorExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from administrators
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from administrators
        where admin_id = #{adminId,jdbcType=CHAR}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from administrators
    where admin_id = #{adminId,jdbcType=CHAR}
  </delete>
    <delete id="deleteByExample" parameterType="com.legou.entry.AdministratorExample">
        delete from administrators
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.legou.entry.Administrator">
    insert into administrators (admin_id, admin_name, admin_password, 
      admin_gender, admin_email, admin_phone, 
      admin_createtime, admin_image, admin_type_id
      )
    values (#{adminId,jdbcType=CHAR}, #{adminName,jdbcType=VARCHAR}, #{adminPassword,jdbcType=VARCHAR}, 
      #{adminGender,jdbcType=INTEGER}, #{adminEmail,jdbcType=VARCHAR}, #{adminPhone,jdbcType=CHAR}, 
      #{adminCreatetime,jdbcType=VARCHAR}, #{adminImage,jdbcType=VARCHAR}, #{adminTypeId,jdbcType=INTEGER}
      )
  </insert>
    <insert id="insertSelective" parameterType="com.legou.entry.Administrator">
        insert into administrators
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="adminId != null">
                admin_id,
            </if>
            <if test="adminName != null">
                admin_name,
            </if>
            <if test="adminPassword != null">
                admin_password,
            </if>
            <if test="adminGender != null">
                admin_gender,
            </if>
            <if test="adminEmail != null">
                admin_email,
            </if>
            <if test="adminPhone != null">
                admin_phone,
            </if>
            <if test="adminCreatetime != null">
                admin_createtime,
            </if>
            <if test="adminImage != null">
                admin_image,
            </if>
            <if test="adminTypeId != null">
                admin_type_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="adminId != null">
                #{adminId,jdbcType=CHAR},
            </if>
            <if test="adminName != null">
                #{adminName,jdbcType=VARCHAR},
            </if>
            <if test="adminPassword != null">
                #{adminPassword,jdbcType=VARCHAR},
            </if>
            <if test="adminGender != null">
                #{adminGender,jdbcType=INTEGER},
            </if>
            <if test="adminEmail != null">
                #{adminEmail,jdbcType=VARCHAR},
            </if>
            <if test="adminPhone != null">
                #{adminPhone,jdbcType=CHAR},
            </if>
            <if test="adminCreatetime != null">
                #{adminCreatetime,jdbcType=VARCHAR},
            </if>
            <if test="adminImage != null">
                #{adminImage,jdbcType=VARCHAR},
            </if>
            <if test="adminTypeId != null">
                #{adminTypeId,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.legou.entry.AdministratorExample" resultType="java.lang.Long">
        select count(*) from administrators
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update administrators
        <set>
            <if test="record.adminId != null">
                admin_id = #{record.adminId,jdbcType=CHAR},
            </if>
            <if test="record.adminName != null">
                admin_name = #{record.adminName,jdbcType=VARCHAR},
            </if>
            <if test="record.adminPassword != null">
                admin_password = #{record.adminPassword,jdbcType=VARCHAR},
            </if>
            <if test="record.adminGender != null">
                admin_gender = #{record.adminGender,jdbcType=INTEGER},
            </if>
            <if test="record.adminEmail != null">
                admin_email = #{record.adminEmail,jdbcType=VARCHAR},
            </if>
            <if test="record.adminPhone != null">
                admin_phone = #{record.adminPhone,jdbcType=CHAR},
            </if>
            <if test="record.adminCreatetime != null">
                admin_createtime = #{record.adminCreatetime,jdbcType=VARCHAR},
            </if>
            <if test="record.adminImage != null">
                admin_image = #{record.adminImage,jdbcType=VARCHAR},
            </if>
            <if test="record.adminTypeId != null">
                admin_type_id = #{record.adminTypeId,jdbcType=INTEGER},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update administrators
        set admin_id = #{record.adminId,jdbcType=CHAR},
        admin_name = #{record.adminName,jdbcType=VARCHAR},
        admin_password = #{record.adminPassword,jdbcType=VARCHAR},
        admin_gender = #{record.adminGender,jdbcType=INTEGER},
        admin_email = #{record.adminEmail,jdbcType=VARCHAR},
        admin_phone = #{record.adminPhone,jdbcType=CHAR},
        admin_createtime = #{record.adminCreatetime,jdbcType=VARCHAR},
        admin_image = #{record.adminImage,jdbcType=VARCHAR},
        admin_type_id = #{record.adminTypeId,jdbcType=INTEGER}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.legou.entry.Administrator">
        update administrators
        <set>
            <if test="adminName != null">
                admin_name = #{adminName,jdbcType=VARCHAR},
            </if>
            <if test="adminPassword != null">
                admin_password = #{adminPassword,jdbcType=VARCHAR},
            </if>
            <if test="adminGender != null">
                admin_gender = #{adminGender,jdbcType=INTEGER},
            </if>
            <if test="adminEmail != null">
                admin_email = #{adminEmail,jdbcType=VARCHAR},
            </if>
            <if test="adminPhone != null">
                admin_phone = #{adminPhone,jdbcType=CHAR},
            </if>
            <if test="adminCreatetime != null">
                admin_createtime = #{adminCreatetime,jdbcType=VARCHAR},
            </if>
            <if test="adminImage != null">
                admin_image = #{adminImage,jdbcType=VARCHAR},
            </if>
            <if test="adminTypeId != null">
                admin_type_id = #{adminTypeId,jdbcType=INTEGER},
            </if>
        </set>
        where admin_id = #{adminId,jdbcType=CHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.legou.entry.Administrator">
    update administrators
    set admin_name = #{adminName,jdbcType=VARCHAR},
      admin_password = #{adminPassword,jdbcType=VARCHAR},
      admin_gender = #{adminGender,jdbcType=INTEGER},
      admin_email = #{adminEmail,jdbcType=VARCHAR},
      admin_phone = #{adminPhone,jdbcType=CHAR},
      admin_createtime = #{adminCreatetime,jdbcType=VARCHAR},
      admin_image = #{adminImage,jdbcType=VARCHAR},
      admin_type_id = #{adminTypeId,jdbcType=INTEGER}
    where admin_id = #{adminId,jdbcType=CHAR}
  </update>
</mapper>